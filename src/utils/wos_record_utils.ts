import { SubjectMap } from './subject_map';
import { WosRecord, WosFields } from './../interfaces';
import * as _ from 'underscore';

const PathCountryReg = /([^\x00-\xff]+)/;

const CountryMap: { [key: string]: RegExp[] } = {
    '美国': [/\busa\b/, /\bal\W?$/, /\bdc\W?$/, /\bak\W?$/, /\baz\W?$/, /\bar\W?$/, /\bca\W?$/, /\bco\W?$/, /\bct\W?$/, /\bde\W?$/, /\bfl\W?$/, /\bga\W?$/, /\bhi\W?$/, /\bid\W?$/, /\bil\W?$/, /\bin\W?$/, /\bia\W?$/, /\bks\W?$/, /\bky\W?$/, /\bla\W?$/, /\bme\W?$/, /\bmd\W?$/, /\bma\W?$/, /\bmi\W?$/, /\bmn\W?$/, /\bms\W?$/, /\bmo\W?$/, /\bmt\W?$/, /\bne\W?$/, /\bnv\W?$/, /\bnh\W?$/, /\bnj\W?$/, /\bnm\W?$/, /\bny\W?$/, /\bnc\W?$/, /\bnd\W?$/, /\boh\W?$/, /\bok\W?$/, /\bor\W?$/, /\bpa\W?$/, /\bri\W?$/, /\bsc\W?$/, /\bsd\W?$/, /\btn\W?$/, /\btx\W?$/, /\but\W?$/, /\bvt\W?$/, /\bva\W?$/, /\bwa\W?$/, /\bwv\W?$/, /\bwi\W?$/, /\bwy\W?$/i],
    '中国': [/\bchina\b/i],
    'Congo, Dem Rep': [/\bcongo, dem rep\b/, /\b\congo, dem\b/, /\bdem rep congo\b/, /\bKinshasa\b/i, /Congo, dem/i],
    'Congo, Rep': [/\bcongo, rep\b/, /\brep of congo\b/, /\bcongo peopl rep\b/, /\bBrazzaville\b/i, /\bCongo, Rep./i, /\brep congo/i],
    'Egypt': [/\begypt, arab rep\b/i],
    'sao tome and principe': [/\bsao tome & prin\b/, /\bsao tome & principe\b/i],
    'guinea bissau': [/\bguinea.?bissau\b/i],
    'gambia': [/\bgambia\b/i],
    'yemen': [/\byemen\b/i],
    'uae': [/\bu arab emirates\b/i],
    '英国': [/\bu.k\b/, /\bengland\b/i],
    'serbia': [/\bserbia\b/i],
    'falkland': [/\bfalkland\b/i],
    'dominica': [/\bdominica\b/i],
    'saudi arabia': [/\bsaudi\b/i],
    'Congo': [/\bCongo/i],
    'Dominica': [/\bDominica/i],
    'Falkland': [/\bFalkland/i],
    'Serbia': [/\bSerbia/i],
    'U.K': [/\bU.K/i],
    'UAE': [/\bUAE/i],
    'USA': [/\bUSA/i],
    'YEMEN': [/\bYEMEN/i],
    'Saudi Arabia': [/\bSaudi Arabia/i],
    'afars & issas': [/\bafars & issas/i],
    'afghanistan': [/\bafghanistan/i],
    'agadir': [/\bagadir/i],
    'albania': [/\balbania/i],
    'andorra': [/\bandorra/i],
    'anguilla': [/\banguilla/i],
    'antigua & barbu': [/\bantigua & barbu/i],
    'argentina': [/\bargentina/i],
    'armenia': [/\barmenia/i],
    'aryanah': [/\baryanah/i],
    'australia': [/\baustralia/i],
    'austria': [/\baustria/i],
    'azerbaijan': [/\bazerbaijan/i],
    'bahamas': [/\bbahamas/i],
    'bahrain': [/\bbahrain/i],
    'bangladesh': [/\bbangladesh/i],
    'barbados': [/\bbarbados/i],
    'belgium': [/\bbelgium/i],
    'belize': [/\bbelize/i],
    'bermuda': [/\bbermuda/i],
    'bhutan': [/\bbhutan/i],
    'bolivia': [/\bbolivia/i],
    'bophuthatswana': [/\bbophuthatswana/i],
    'bosnia & herceg': [/\bbosnia & herceg/i],
    'brazil': [/\bbrazil/i],
    'brazil;': [/\bbrazil;/i],
    'brit virgin isl': [/\bbrit virgin isl/i],
    'britishvirgin': [/\bbritishvirgin/i],
    'brunei': [/\bbrunei/i],
    'bulgaria': [/\bbulgaria/i],
    'burma': [/\bburma/i],
    'byelarus': [/\bbyelarus/i],
    'cambodia': [/\bcambodia/i],
    'canada': [/\bcanada/i],
    'cayman islands': [/\bcayman islands/i],
    'cent afr empire': [/\bcent afr empire/i],
    'cent afr republ': [/\bcent afr republ/i],
    'chile': [/\bchile/i],
    'ciskei': [/\bciskei/i],
    'colombia': [/\bcolombia/i],
    'cook islands': [/\bcook islands/i],
    'costa rica': [/\bcosta rica/i],
    'cote ivoire': [/\bivoire/i],
    'crimea': [/\bcrimea/i],
    'croatia': [/\bcroatia/i],
    'cuba': [/\bcuba/i],
    'cyprus': [/\bcyprus/i],
    'czech republic': [/\bczech republic/i],
    'czechoslovakia': [/\bczechoslovakia/i],
    'denmark': [/\bdenmark/i],
    'dominican rep': [/\bdominican rep/i],
    'ecuador': [/\becuador/i],
    'el salvador': [/\bel salvador/i],
    'equat guinea': [/\bequat guinea/i],
    'estonia': [/\bestonia/i],
    'fed rep ger': [/\bfed rep ger/i],
    'fiji': [/\bfiji/i],
    'finland': [/\bfinland/i],
    'fr polynesia': [/\bfr polynesia/i],
    'france': [/\bfrance/i],
    'french guiana': [/\bfrench guiana/i],
    'ger dem rep': [/\bger dem rep/i],
    'germany': [/\bgermany/i],
    'gibraltar': [/\bgibraltar/i],
    'greece': [/\bgreece/i],
    'greenland': [/\bgreenland/i],
    'grenada': [/\bgrenada/i],
    'guadeloupe': [/\bguadeloupe/i],
    'guatemala': [/\bguatemala/i],
    'guernsey': [/\bguernsey/i],
    'guyana': [/\bguyana/i],
    'haiti': [/\bhaiti/i],
    'honduras': [/\bhonduras/i],
    'hong kong': [/\bhong kong/i],
    'hungary': [/\bhungary/i],
    'iceland': [/\biceland/i],
    'india': [/\bindia/i],
    'indonesia': [/\bindonesia/i],
    'iran': [/\biran/i],
    'iraq': [/\biraq/i],
    'iraw': [/\biraw/i],
    'ireland': [/\bireland/i],
    'israel': [/\bisrael/i],
    'italy': [/\bitaly/i],
    'ivory coast': [/\bivory coast/i],
    'jamaica': [/\bjamaica/i],
    'japan': [/\bjapan/i],
    'jersey': [/\bjersey/i],
    'jordan': [/\bjordan/i],
    'kazakhstan': [/\bkazakhstan/i],
    'kiribati': [/\bkiribati/i],
    'kosovo': [/\bkosovo/i],
    'kuwait': [/\bkuwait/i],
    'kyrgyzstan': [/\bkyrgyzstan/i],
    'laos': [/\blaos/i],
    'latvia': [/\blatvia/i],
    'lebanon': [/\blebanon/i],
    'liechtenstein': [/\bliechtenstein/i],
    'lithuania': [/\blithuania/i],
    'luxembourg': [/\bluxembourg/i],
    'macedonia': [/\bmacedonia/i],
    'malagasy republ': [/\bmalagasy republ/i],
    'malaysia': [/\bmalaysia/i],
    'maldives': [/\bmaldives/i],
    'malta': [/\bmalta/i],
    'marshall island': [/\bmarshall island/i],
    'martinique': [/\bmartinique/i],
    'mexico': [/\bmexico/i],
    'micronesia': [/\bmicronesia/i],
    'middele e': [/\bmiddele e/i],
    'moldova': [/\bmoldova/i],
    'monaco': [/\bmonaco/i],
    'mongol peo rep': [/\bmongol peo rep/i],
    'montenegro': [/\bmontenegro/i],
    'muretania': [/\bmuretania/i],
    'myanmar': [/\bmyanmar/i],
    'nepal': [/\bnepal/i],
    'neth antilles': [/\bneth antilles/i],
    'netherlands': [/\bnetherlands/i],
    'new caledonia': [/\bnew caledonia/i],
    'new zealand': [/\bnew zealand/i],
    'nicaragua': [/\bnicaragua/i],
    'north ireland': [/\bnorth ireland/i],
    'north korea': [/\bnorth korea/i],
    'norway': [/\bnorway/i],
    'oman': [/\boman/i],
    'pakistan': [/\bpakistan/i],
    'palau': [/\bpalau/i],
    'palestine': [/\bpalestine/i],
    'palestinian ter': [/\bpalestinian ter/i],
    'panama': [/\bpanama/i],
    'papua n guinea': [/\bpapua n guinea/i],
    'paraguay': [/\bparaguay/i],
    'peoples r china': [/\bpeoples r china/i],
    'peru': [/\bperu/i],
    'philippines': [/\bphilippines/i],
    'poland': [/\bpoland/i],
    'portugal': [/\bportugal/i],
    'puerto rico': [/\bpuerto rico/i],
    'qatar': [/\bqatar/i],
    'rabat maroc': [/\brabat maroc/i],
    'rep of georgia': [/\brep of georgia/i],
    'reunion': [/\breunion/i],
    'romania': [/\bromania/i],
    'russia': [/\brussia/i],
    'samoa': [/\bsamoa/i],
    'san marino': [/\bsan marino/i],
    'scotland': [/\bscotland/i],
    'senegambia': [/\bsenegambia/i],
    'sharja': [/\bsharja/i],
    'singapore': [/\bsingapore/i],
    'slovakia': [/\bslovakia/i],
    'slovenia': [/\bslovenia/i],
    'solomon islands': [/\bsolomon islands/i],
    'south korea': [/\bsouth korea/i],
    'spain': [/\bspain/i],
    'sri lanka': [/\bsri lanka/i],
    'st kitts & nevi': [/\bst kitts & nevi/i],
    'st lucia': [/\bst lucia/i],
    'st vincent': [/\bst vincent/i],
    'surinam': [/\bsurinam/i],
    'sweden': [/\bsweden/i],
    'switzerland': [/\bswitzerland/i],
    'syria': [/\bsyria/i],
    'taiwan': [/\btaiwan/i],
    'tajikistan': [/\btajikistan/i],
    'tajikstan': [/\btajikstan/i],
    'thailand': [/\bthailand/i],
    'timor leste': [/\btimor leste/i],
    'tonga': [/\btonga/i],
    'transkei': [/\btranskei/i],
    'trinid & tobago': [/\btrinid & tobago/i],
    'troyes': [/\btroyes/i],
    'turkey': [/\bturkey/i],
    'turkmenistan': [/\bturkmenistan/i],
    'tuvalu': [/\btuvalu/i],
    'ukraine': [/\bukraine/i],
    'united kingdom': [/\bunited kingdom/i],
    'upper volta': [/\bupper volta/i],
    'uruguay': [/\buruguay/i],
    'ussr': [/\bussr/i],
    'utara malaysia': [/\butara malaysia/i],
    'uzbekistan': [/\buzbekistan/i],
    'vanuatu': [/\bvanuatu/i],
    'vatican': [/\bvatican/i],
    'venda': [/\bvenda/i],
    'venezuela': [/\bvenezuela/i],
    'vietnam': [/\bvietnam/i],
    'w ind assoc st': [/\bw ind assoc st/i],
    'wales': [/\bwales/i],
    'western sahara': [/\bwestern sahara/i],
    'western samoa': [/\bwestern samoa/i],
    'yugoslavia': [/\byugoslavia/i],
    'zaire': [/\bzaire/i],
    'algeria': [/\balgeria/i],
    'angola': [/\bangola/i],
    'benin': [/\bbenin/i],
    'botswana': [/\bbotswana/i],
    'burkina faso': [/\bburkina faso/i],
    'burundi': [/\bburundi/i],
    'cape verde': [/\bcabo verde/i, /\bCape Verde/i],
    'cameroon': [/\bcameroon/i],
    'central african republic': [/\bcentral african republic/i],
    'chad': [/\bchad/i],
    'comoros': [/\bcomoros/i],
    'congo': [/\bcongo/i],
    'congo, dem rep': [/\bcongo, dem rep/i],
    'djibouti': [/\bdjibouti/i],
    'egypt': [/\begypt/i],
    'egypt, arab rep': [/\begypt, arab rep/i],
    'eritrea': [/\beritrea/i],
    'ethiopia': [/\bethiopia/i],
    'gabon': [/\bgabon/i],
    'ghana': [/\bghana/i],
    'guinea': [/\bguinea[\b.]?$/i],
    'guinea-bissau': [/\bguinea-bissau/i],
    'kenya': [/\bkenya/i],
    'lesotho': [/\blesotho/i],
    'liberia': [/\bliberia/i],
    'libya': [/\blibya/i],
    'madagascar': [/\bmadagascar/i],
    'malawi': [/\bmalawi/i],
    'mali': [/\bmali/i],
    'mauritania': [/\bmauritania/i],
    'mauritius': [/\bmauritius/i],
    'morocco': [/\bmorocco/i],
    'mozambique': [/\bmozambique/i],
    'namibia': [/\bnamibia/i],
    'niger': [/\bniger\b/i],
    'nigeria': [/\bnigeria/i],
    'rwanda': [/\brwanda/i],
    'sao tome & prin': [/\bsao tome & prin/i],
    'senegal': [/\bsenegal/i],
    'seychelles': [/\bseychelles/i],
    'sierra leone': [/\bsierra leone/i],
    'somalia': [/\bsomalia/i],
    'south africa': [/\bsouth africa/i],
    'south sudan': [/\bsouth sudan/i],
    'sudan': [/\bsudan/i],
    'swaziland': [/\bswaziland/i],
    'tanzania': [/\btanzania/i],
    'togo': [/\btogo/i],
    'tunisia': [/\btunisia/i],
    'uganda': [/\buganda/i],
    'zambia': [/\bzambia/i],
    'zimbabwe': [/\bzimbabwe/i],
    'Angola': [/\bAngola/i],
    'Congo, Dem. Rep.': [/\bCongo, Dem. Rep./i],
    'Egypt, Arab Rep.': [/\bEgypt, Arab Rep./i],
    'Equatorial Guinea': [/\bEquatorial Guinea/i],
    'Gambia, The': [/\bGambia, The/i],
    'congo, dem. rep': [/\bcongo, dem. rep./i],
    'equatorial guinea': [/\bequatorial guinea/i],
    'gambia, the': [/\bgambia, the/]
};

const SearchCountries = Object.keys(CountryMap);

const CountryReg = /,?([^,\.\d]*)\W?$/;
const FirstCommaPartreg = /([^,]*),?/;

export class WosRecordUtils {

    private static shortFiledNameToRealName = {};

    public static getFoundings(record: WosRecord): string[] {
        if (record['foundings']) {
            return record['foundings'];
        }

        record['foundings'] = (record.FU || '').split(';').map(str => {
            const matchs = /([^\(\[]*)/.exec(str);
            if (matchs) {
                return matchs[1].trim();
            }
            return str.trim();
        }).filter(str => str);
        record['foundings'] = _.uniq(record['foundings']);
        return record['foundings'];
    }

    public static getSubjects(record: WosRecord): string[] {
        if (record['subjects']) {
            return record['subjects'];
        }
        const subjects = record.WC.toLowerCase().split(';').map(str => str.trim()).filter(str => str);

        record['subjects'] = _.chain(subjects).map((subject) => {
            subject = subject.replace(/[\s,&]+/g, ' ');
            subject = SubjectMap[subject] || subject;
            SubjectList.find((officialSubject) => {
                if (subject.indexOf(officialSubject) >= 0) {
                    subject = officialSubject;
                    return true;
                }
            });
            return subject;
        }).uniq().value();

        return record['subjects'];
    }

    public static getInititutionWithCountry(record: WosRecord): string[] {
        return record.C1.map((line) => {
            return `${this.getCountryByLine(line)}_${this.getInstitutionByLine(line)}`;
        });
    }

    public static isAfricaCountry(country: string): boolean {
        return !!AfricaCountries[country.toLowerCase()];
    }

    public static getInstitutions(record: WosRecord): string[] {
        const c1 = record.C1;

        return c1.map((line: string) => {
            return this.getInstitutionByLine(line);
        }).filter(r => r);
    }

    public static getInstitution(record: WosRecord): string {
        return this.getInstitutionByLine(record.C1[0]);
    }

    public static getInstitutionByLine(line: string = ''): string {
        const index = line.indexOf(']');
        if (index >= 0) {
            line = line.substring(index + 1);
        }

        const matchs = /([^\,]*)/.exec(line);
        if (matchs) {
            return matchs[1].trim();
        }
    }

    public static getCountries(record: WosRecord): string[] {
        if (record['countries']) {
            return record['countries'];
        }

        const lines = [...record.C1, ...record.RP.split(';')];
        const countries = lines.map(line => {
            return this.getCountryByLine(line);
        }).filter(v => v);

        record['countries'] = _.uniq(countries);

        return record['countries'];
    }

    public static getRPCountries(record): string[] {
        if (record['rpCountries']) {
            return record['rpCountries'];
        }

        record['rpCountries'] = record.RP.split(';').map(line => {
            return this.getCountryByLine(line);
        }).filter(v => v);
        record['rpCountries'] = _.uniq(record['rpCountries']);

        return record['rpCountries'];
    }

    public static getPublishYear(record: WosRecord): string {
        return record[WosFields.出版年];
    }

    public static getCountryFromPath(filePath: string): string {
        return PathCountryReg.exec(filePath)[1];
    }

    public static getCountry(record: WosRecord): string {
        return this.getCountries(record)[0];
    }

    public static getCountryByLine(line: string): string {
        if (!line) {
            return;
        }

        line = line.toLowerCase();

        let country = SearchCountries.find((key) => {
            return !!CountryMap[key].find((reg) => {
                return reg.test(line);
            });
        });

        if (!country) {
            const matchs = CountryReg.exec(line);
            if (matchs) {
                country = matchs[1].trim();
            }
        }

        // console.log(country, line);

        // 去除两个字母的，可以能是人名
        if (country && /^[a-z]{1,2}$/.test(country)) {
            return;
        }

        return country;
    }

    public static getShortName(name: string, wordLimit: number = 4) {
        const splits = name.toLowerCase().split(/[\s,&@]/);
        const shortName = _.difference(splits, ['of', 'the', 'and']).slice(0, wordLimit).join(' ');
        if (!shortName) {
            return name;
        }
        // this.shortFiledNameToRealName[shortName] = name;
        return shortName;
    }

    public static getRealName(shortName: string) {
        return this.shortFiledNameToRealName[shortName] || shortName;
    }

    public static getFirstCommaPart(str: string) {
        return FirstCommaPartreg.exec(str)[1];
    }

    public static getChineseCountryName(country: string) {
        if ('string' === typeof country) {
            return AfricaCountries[country.toLowerCase()] || country;
        }
        return country;
    }
}

export const AfricaCountries = {
    'congo': '刚果',
    'algeria': '阿尔及利亚',
    'angola': '安哥拉',
    'benin': '贝宁',
    'botswana': '博茨瓦纳',
    'burkina faso': '布基纳法索',
    'burundi': '布隆迪',
    'cape verde': '佛得角',
    'cameroon': '喀麦隆',
    'central african republic': '中非共和国',
    'chad': '乍得',
    'comoros': '科摩罗',
    'congo, dem rep': '刚果（金）',
    'congo, rep': '刚果（布）',
    'cote ivoire': '科特迪瓦',
    'djibouti': '吉布提',
    'egypt': '埃及',
    'egypt, arab rep': '埃及',
    'eritrea': '厄立特里亚',
    'ethiopia': '埃塞俄比亚',
    'gabon': '加蓬',
    'gambia': '冈比亚',
    'ghana': '加纳',
    'guinea bissau': '几内亚比绍共和国',
    'guinea': '几内亚',
    'guinea-bissau': '几内亚比绍共和国',
    'kenya': '肯尼亚',
    'lesotho': '莱索托',
    'liberia': '利比里亚',
    'libya': '利比亚',
    'madagascar': '马达加斯加',
    'malawi': '马拉维',
    'mali': '马里',
    'mauritania': '毛里塔尼亚',
    'mauritius': '毛里求斯',
    'morocco': '摩洛哥',
    'mozambique': '莫桑比克',
    'namibia': '纳米比亚',
    'niger': '尼日尔',
    'nigeria': '尼日利亚',
    'rwanda': '卢旺达',
    'sao tome & prin': '圣多美和普林西比',
    'sao tome and principe': '圣多美和普林西比',
    'senegal': '塞内加尔',
    'seychelles': '塞舌尔',
    'sierra leone': '塞拉利昂',
    'somalia': '索马里',
    'south africa': '南非',
    'south sudan': '南苏丹',
    'sudan': '苏丹',
    'swaziland': '斯威士兰',
    'tanzania': '坦桑尼亚',
    'togo': '多哥',
    'tunisia': '突尼斯',
    'uganda': '乌干达',
    'zambia': '赞比亚',
    'zimbabwe': '津巴布韦',
    'Angola': '安哥拉',
    'Congo, Dem. Rep.': '刚果（金）',
    'Egypt, Arab Rep.': '埃及',
    'Equatorial Guinea': '赤道几内亚',
    'Gambia, The': '冈比亚',
    'congo, dem. rep.': '刚果（金）',
    'egypt, arab rep.': '埃及',
    'equatorial guinea': '赤道几内亚',
    'gambia, the': '冈比亚'
};


const I18N = {
    'Congo, dem': '刚果(金)',
    'Dominica': '多米尼加',
    'Falkland': '福克兰',
    'Serbia': '塞尔维亚',
    'U.K': '英国',
    'UAE': '阿拉伯联合酋长国',
    'USA': '美国',
    'YEMEN': '也门',
    'Saudi Arabia': '沙特阿拉伯',
    'afars & issas': '阿法尔和伊萨',
    'afghanistan': '阿富汗',
    'africa': '非洲',
    'agadir': '阿加迪尔',
    'albania': '阿尔巴尼亚',
    'andorra': '安道尔',
    'anguilla': '安圭拉',
    'antigua & barbu': '安提瓜·巴尔布',
    'argentina': '阿根廷',
    'armenia': '亚美尼亚',
    'aryanah': '艾尔亚奈',
    'australia': '澳大利亚',
    'austria': '奥地利',
    'azerbaijan': '阿塞拜疆',
    'bahamas': '巴哈马',
    'bahrain': '巴林',
    'bangladesh': '孟加拉国',
    'barbados': '巴巴多斯',
    'belgium': '比利时',
    'belize': '伯利兹',
    'bermuda': '百慕大群岛',
    'bhutan': '不丹',
    'bolivia': '玻利维亚',
    'bophuthatswana': '博普塔茨瓦纳',
    'bosnia & herceg': '波斯尼亚和海尔',
    'brazil': '巴西',
    'brazil;': '巴西;',
    'brit virgin isl': '英国的处女岛',
    'britishvirgin': 'britishvirgin',
    'brunei': '文莱',
    'bulgaria': '保加利亚',
    'burma': '缅甸',
    'byelarus': 'byelarus',
    'cambodia': '柬埔寨',
    'canada': '加拿大',
    'cape verde': '佛得角',
    'cayman islands': '开曼群岛',
    'cent afr empire': '中部非洲帝国',
    'cent afr republ': '中部非洲共和国',
    'chile': '智利',
    'ciskei': '息斯基',
    'colombia': '哥伦比亚',
    'congo, rep': '刚果（布）',
    'cook islands': '库克群岛',
    'costa rica': '哥斯达黎加',
    'cote ivoire': '科特迪瓦',
    'crimea': '克里米亚',
    'croatia': '克罗地亚',
    'cuba': '古巴',
    'cyprus': '塞浦路斯',
    'czech republic': '捷克共和国',
    'czechoslovakia': '捷克斯洛伐克',
    'denmark': '丹麦',
    'dominican rep': '多米尼加共和国',
    'ecuador': '厄瓜多尔',
    'el salvador': '萨尔瓦多',
    'equat guinea': '赤道几内亚',
    'estonia': '爱沙尼亚',
    'fed rep ger': '美联储代表德国',
    'fiji': '斐济',
    'finland': '芬兰',
    'fr polynesia': '从波利尼西亚',
    'france': '法国',
    'french guiana': '法属圭亚那',
    'ger dem rep': 'GER DEM代表',
    'germany': '德国',
    'gibraltar': '直布罗陀',
    'greece': '希腊',
    'greenland': '格陵兰岛',
    'grenada': '格林纳达',
    'guadeloupe': '瓜德罗普岛',
    'guatemala': '瓜地马拉',
    'guernsey': '根西岛',
    'guyana': '圭亚那',
    'haiti': '海地',
    'honduras': '洪都拉斯',
    'hong kong': '香港',
    'hungary': '匈牙利',
    'iceland': '冰岛',
    'india': '印度',
    'indonesia': '印度尼西亚',
    'iran': '伊朗',
    'iraq': '伊拉克',
    'iraw': '腾丰',
    'ireland': '爱尔兰',
    'israel': '以色列',
    'italy': '意大利',
    'ivory coast': '象牙海岸',
    'jamaica': '牙买加',
    'japan': '日本',
    'jersey': '泽西',
    'jordan': '乔丹',
    'kazakhstan': '哈萨克斯坦',
    'kiribati': '基里巴斯',
    'kosovo': '科索沃',
    'kuwait': '科威特',
    'kyrgyzstan': '吉尔吉斯斯坦',
    'laos': '老挝',
    'latvia': '拉脱维亚',
    'lebanon': '黎巴嫩',
    'liechtenstein': '列支敦士登',
    'lithuania': '立陶宛',
    'luxembourg': '卢森堡',
    'macedonia': '马其顿',
    'malagasy republ': '马达加斯加共和国',
    'malaysia': '马来西亚',
    'maldives': '马尔代夫',
    'malta': '马耳他',
    'marshall island': '马绍尔群岛',
    'martinique': '马提尼克',
    'mexico': '墨西哥',
    'micronesia': '密克罗尼西亚',
    'middele e': '中E',
    'moldova': '摩尔多瓦',
    'monaco': '摩纳哥',
    'mongol peo rep': '蒙古人民代表',
    'montenegro': '黑山',
    'muretania': 'muretania',
    'myanmar': '缅甸',
    'nepal': '尼泊尔',
    'neth antilles': '荷属安第列斯',
    'netherlands': '荷兰',
    'new caledonia': '新喀里多尼亚',
    'new zealand': '新西兰',
    'nicaragua': '尼加拉瓜',
    'north ireland': '北爱尔兰',
    'north korea': '朝鲜',
    'norway': '挪威',
    'oman': '阿曼',
    'pakistan': '巴基斯坦',
    'palau': '帕劳',
    'palestine': '巴勒斯坦',
    'palestinian ter': '巴勒斯坦之三',
    'panama': '巴拿马',
    'papua n guinea': '巴布亚新几内亚',
    'paraguay': '巴拉圭',
    'peoples r china': 'R中国人民',
    'peru': '秘鲁',
    'philippines': '菲律宾',
    'poland': '波兰',
    'portugal': '葡萄牙',
    'puerto rico': '波多黎各',
    'qatar': '卡塔尔',
    'rabat maroc': '拉巴特摩洛哥',
    'rep congo': '刚果共和国',
    'rep of georgia': '代表乔治亚',
    'reunion': '重聚',
    'romania': '罗马尼亚',
    'russia': '俄罗斯',
    'samoa': '萨摩亚',
    'san marino': '圣马力诺',
    'saudi arabia': '沙特阿拉伯',
    'scotland': '苏格兰',
    'senegambia': '塞内冈比亚',
    'sharja': '孤儿沙加',
    'singapore': '新加坡',
    'slovakia': '斯洛伐克',
    'slovenia': '斯洛文尼亚',
    'solomon islands': '所罗门群岛',
    'south korea': '韩国',
    'spain': '西班牙',
    'sri lanka': '斯里兰卡',
    'st kitts & nevi': '圣基茨岛和痣',
    'st lucia': '圣露西亚',
    'st vincent': '圣文森',
    'surinam': '苏里南',
    'sweden': '瑞典',
    'switzerland': '瑞士',
    'syria': '叙利亚',
    'taiwan': '台湾',
    'tajikistan': '塔吉克斯坦',
    'tajikstan': '塔吉克斯坦',
    'thailand': '泰国',
    'timor leste': '东帝汶',
    'tonga': '汤加',
    'transkei': '特兰斯凯',
    'trinid & tobago': 'trinid &多巴哥',
    'troyes': '特鲁瓦',
    'turkey': '火鸡',
    'turkmenistan': '土库曼斯坦',
    'tuvalu': '图瓦卢',
    'uae': '阿联酋',
    'ukraine': '乌克兰',
    'united kingdom': '联合王国',
    'upper volta': '沃尔塔',
    'uruguay': '乌拉圭',
    'ussr': '苏联',
    'utara malaysia': '北马来西亚',
    'uzbekistan': '乌兹别克斯坦',
    'vanuatu': '瓦努阿图',
    'vatican': '梵蒂冈',
    'venda': '文达',
    'venezuela': '委内瑞拉',
    'vietnam': '越南',
    'w ind assoc st': 'W ind公司ST',
    'wales': '威尔士',
    'western sahara': '西撒哈拉',
    'western samoa': '萨摩亚西部',
    'yugoslavia': '南斯拉夫',
    'zaire': '扎伊尔',
    'algeria': '阿尔及利亚',
    'angola': '安哥拉',
    'benin': '贝宁',
    'botswana': '博茨瓦纳',
    'burkina faso': '布基纳法索',
    'burundi': '布隆迪',
    'cabo verde': '佛得角',
    'cameroon': '喀麦隆',
    'central african republic': '中非共和国',
    'chad': '乍得',
    'comoros': '科摩罗',
    'congo, dem rep': '刚果（金）',
    'djibouti': '吉布提',
    'egypt': '埃及',
    'egypt, arab rep': '埃及',
    'eritrea': '厄立特里亚',
    'ethiopia': '埃塞俄比亚',
    'gabon': '加蓬',
    'gambia': '冈比亚',
    'ghana': '加纳',
    'guinea bissau': '几内亚比绍共和国',
    'guinea': '几内亚',
    'guinea-bissau': '几内亚比绍共和国',
    'kenya': '肯尼亚',
    'lesotho': '莱索托',
    'liberia': '利比里亚',
    'libya': '利比亚',
    'madagascar': '马达加斯加',
    'malawi': '马拉维',
    'mali': '马里',
    'mauritania': '毛里塔尼亚',
    'mauritius': '毛里求斯',
    'morocco': '摩洛哥',
    'mozambique': '莫桑比克',
    'namibia': '纳米比亚',
    'niger': '尼日尔',
    'nigeria': '尼日利亚',
    'rwanda': '卢旺达',
    'sao tome & prin': '圣多美和普林西比',
    'sao tome and principe': '圣多美和普林西比',
    'senegal': '塞内加尔',
    'seychelles': '塞舌尔',
    'sierra leone': '塞拉利昂',
    'somalia': '索马里',
    'south africa': '南非',
    'south sudan': '南苏丹',
    'sudan': '苏丹',
    'swaziland': '斯威士兰',
    'tanzania': '坦桑尼亚',
    'togo': '多哥',
    'tunisia': '突尼斯',
    'uganda': '乌干达',
    'zambia': '赞比亚',
    'zimbabwe': '津巴布韦',
    'Angola': '安哥拉',
    'Congo, Dem. Rep.': '刚果（金）',
    'Congo, Rep.': '刚果（布）',
    'Egypt, Arab Rep.': '埃及',
    'Equatorial Guinea': '赤道几内亚',
    'Gambia, The': '冈比亚',
    'congo, dem. rep.': '刚果（金）',
    'congo, rep.': '刚果（布）',
    'egypt, arab rep.': '埃及',
    'equatorial guinea': '赤道几内亚',
    'gambia, the': '冈比亚'
}


const SubjectList = [
    "acoustics",
    "agricultural economics policy",
    "agricultural engineering",
    "agriculture dairy animal science",
    "agriculture multidisciplinary",
    "agronomy",
    "allergy",
    "anatomy morphology",
    "andrology",
    "anesthesiology",
    "anthropology",
    "archaeology",
    "architecture",
    "area studies",
    "art",
    "asian studies",
    "astronomy astrophysics",
    "audiology speech-language pathology",
    "automation control systems",
    "behavioral sciences",
    "biochemical research methods",
    "biochemistry molecular biology",
    "biodiversity conservation",
    "biology",
    "biophysics",
    "biotechnology applied microbiology",
    "business",
    "business finance",
    "cardiac cardiovascular systems",
    "cell tissue engineering",
    "cell biology",
    "chemistry analytical",
    "chemistry applied",
    "chemistry inorganic nuclear",
    "chemistry medicinal",
    "chemistry multidisciplinary",
    "chemistry organic",
    "chemistry physical",
    "classics",
    "clinical neurology",
    "communication",
    "computer science artificial intelligence",
    "computer science cybernetics",
    "computer science hardware architecture",
    "computer science information systems",
    "computer science interdisciplinary applications",
    "computer science software engineering",
    "computer science theory methods",
    "construction building technology",
    "criminology penology",
    "critical care medicine",
    "crystallography",
    "cultural studies",
    "dance",
    "demography",
    "dentistry oral surgery medicine",
    "dermatology",
    "developmental biology",
    "ecology",
    "economics",
    "education educational research",
    "education scientific disciplines",
    "education special",
    "electrochemistry",
    "emergency medicine",
    "endocrinology metabolism",
    "energy fuels",
    "engineering aerospace",
    "engineering biomedical",
    "engineering chemical",
    "engineering civil",
    "engineering electrical electronic",
    "engineering environmental",
    "engineering geological",
    "engineering industrial",
    "engineering manufacturing",
    "engineering marine",
    "engineering mechanical",
    "engineering multidisciplinary",
    "engineering ocean",
    "engineering petroleum",
    "entomology",
    "environmental sciences",
    "environmental studies",
    "ergonomics",
    "ethics",
    "ethnic studies",
    "evolutionary biology",
    "family studies",
    "film radio television",
    "fisheries",
    "folklore",
    "food science technology",
    "forestry",
    "gastroenterology hepatology",
    "genetics heredity",
    "geochemistry geophysics",
    "geography",
    "geography physical",
    "geology",
    "geosciences multidisciplinary",
    "geriatrics gerontology",
    "gerontology",
    "green sustainable science technology",
    "health care sciences services",
    "health policy services",
    "hematology",
    "history",
    "history philosophy of science",
    "history of social sciences",
    "horticulture",
    "hospitality leisure sport tourism",
    "humanities multidisciplinary",
    "imaging science photographic technology",
    "immunology",
    "industrial relations labor",
    "infectious diseases",
    "information science library science",
    "instruments instrumentation",
    "integrative complementary medicine",
    "international relations",
    "language linguistics",
    "law",
    "limnology",
    "linguistics",
    "literary reviews",
    "literary theory criticism",
    "literature",
    "literature african australian canadian",
    "literature american",
    "literature british isles",
    "literature german dutch scandinavian",
    "literature romance",
    "literature slavic",
    "logic",
    "management",
    "marine freshwater biology",
    "materials science biomaterials",
    "materials science ceramics",
    "materials science characterization testing",
    "materials science coatings films",
    "materials science composites",
    "materials science multidisciplinary",
    "materials science paper wood",
    "materials science textiles",
    "mathematical computational biology",
    "mathematics",
    "mathematics applied",
    "mathematics interdisciplinary applications",
    "mechanics",
    "medical ethics",
    "medical informatics",
    "medical laboratory technology",
    "medicine general internal",
    "medicine legal",
    "medicine research experimental",
    "medieval renaissance studies",
    "metallurgy metallurgical engineering",
    "meteorology atmospheric sciences",
    "microbiology",
    "microscopy",
    "mineralogy",
    "mining mineral processing",
    "multidisciplinary sciences",
    "music",
    "mycology",
    "nanoscience nanotechnology",
    "neuroimaging",
    "neurosciences",
    "nuclear science technology",
    "nursing",
    "nutrition dietetics",
    "obstetrics gynecology",
    "oceanography",
    "oncology",
    "operations research management science",
    "ophthalmology",
    "optics",
    "ornithology",
    "orthopedics",
    "otorhinolaryngology",
    "paleontology",
    "parasitology",
    "pathology",
    "pediatrics",
    "peripheral vascular disease",
    "pharmacology pharmacy",
    "philosophy",
    "physics applied",
    "physics atomic molecular chemical",
    "physics condensed matter",
    "physics fluids plasmas",
    "physics mathematical",
    "physics multidisciplinary",
    "physics nuclear",
    "physics particles fields",
    "physiology",
    "planning development",
    "plant sciences",
    "poetry",
    "political science",
    "polymer science",
    "primary health care",
    "psychiatry",
    "psychology",
    "psychology applied",
    "psychology biological",
    "psychology clinical",
    "psychology developmental",
    "psychology educational",
    "psychology experimental",
    "psychology mathematical",
    "psychology multidisciplinary",
    "psychology psychoanalysis",
    "psychology social",
    "public administration",
    "public environmental occupational health",
    "radiology nuclear medicine medical imaging",
    "rehabilitation",
    "religion",
    "remote sensing",
    "reproductive biology",
    "respiratory system",
    "rheumatology",
    "robotics",
    "social issues",
    "social sciences biomedical",
    "social sciences interdisciplinary",
    "social sciences mathematical methods",
    "social work",
    "sociology",
    "soil science",
    "spectroscopy",
    "sport sciences",
    "statistics probability",
    "substance abuse",
    "surgery",
    "telecommunications",
    "theater",
    "thermodynamics",
    "toxicology",
    "transplantation",
    "transportation",
    "transportation science technology",
    "tropical medicine",
    "urban studies",
    "urology nephrology",
    "veterinary sciences",
    "virology",
    "water resources",
    "women's studies",
    "zoology",
]